services:
  db:
    image: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=keyboardcat
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
  hasura:
    depends_on: 
      auth:
        condition: service_healthy
    image: hasura/graphql-engine
    env_file: .env_compose
    ports:
      - 8082:8080
    healthcheck:
      test: curl --silent --fail http://localhost:8080/healthz -o /dev/null
      interval: 5s
      timeout: 5s
      start_period: 15s
      retries: 15
  auth:
    depends_on:
      db:
        condition: service_healthy
      mailcatcher:
        condition: service_healthy
    image: fusionauth/fusionauth-app:latest
    env_file: fusion_auth/.env
    healthcheck:
      test: curl --silent --fail http://localhost:9011/.well-known/jwks -o /dev/null -w "%{http_code}"
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - 9011:9011
    volumes:
      - fusionauth_config:/usr/local/fusionauth/config
      - ./fusion_auth/kickstart:/usr/local/fusionauth/kickstart
  eyeap:
    depends_on:
      auth:
        condition: service_healthy
      hasura:
        condition: service_healthy
    build: frontend
    develop:
      watch:
        - path: frontend
          action: sync
          target: /app
    ports:
      - 8081:8080
    healthcheck:
      test: curl --silent --fail http://localhost:8080 -o /dev/null -w "%{http_code}"
      interval: 5s
      timeout: 30s
      retries: 5
  mailcatcher:
    build: mailcatcher
    expose:
      - 1025
      - 1080
    ports:
      - 9010:1080
    healthcheck:
      test: curl --silent --fail http://localhost:1080 -o /dev/null
      interval: 5s
      timeout: 30s
      retries: 5
volumes:
  db-data:
  fusionauth_config:
